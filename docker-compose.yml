version: '3.8'

services:
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zookeeper_data:/bitnami

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    volumes:
      - kafka_data:/bitnami

#  webhook:
#    build:
#      context: ./webhook
#    container_name: webhook
#    restart: always
#    ports:
#      - "8080:8080"
#    depends_on:
#      - kafka
#    environment:
#      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092

#  service:
#    build:
#      context: ./service
#    container_name: service
#    restart: always
#    depends_on:
#      - kafka
#    environment:
#      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092

volumes:
  zookeeper_data:
  kafka_data:

